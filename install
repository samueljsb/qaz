#!/usr/bin/env python3
"""Install qaz."""

import os
import subprocess


def _msg(msg: str) -> None:
    print(f"\033[1m[QAZ]\033[0m {msg}")


def _create_venv(qaz_dir: str) -> None:
    try:
        # fmt: off
        subprocess.run(
            (
                "virtualenv",
                "--python", "python3.10",
                "--python", "python3.9",
                "--python", "python3.8",
                os.path.join(qaz_dir, ".venv"),
            ),
            check=True,
        )
        # fmt: on
    except FileNotFoundError:
        subprocess.run(
            ("python3", "-m", "venv", os.path.join(qaz_dir, ".venv")),
            check=True,
        )


def main() -> int:
    qaz_dir = os.path.dirname(os.path.abspath(__name__))
    qaz_python = os.path.join(qaz_dir, ".venv", "bin", "python")
    qaz_entrypoint = os.path.join(qaz_dir, ".venv", "bin", "qaz")

    _msg("Installing dotfiles and management tool...")

    # Install management tool
    _msg("Installing qaz management tool...")
    _create_venv(qaz_dir)
    subprocess.run(
        ("python3", "-m", "venv", os.path.join(qaz_dir, ".venv")),
        check=True,
    )
    subprocess.run(
        (qaz_python, "-m", "pip", "install", "--upgrade", "pip"),
        check=True,
    )
    subprocess.run(
        (qaz_python, "-m", "pip", "install", qaz_dir),
        check=True,
    )
    subprocess.run(
        ("sudo", "ln", "-sf", qaz_entrypoint, "/usr/local/bin"),
        check=True,
    )
    _msg("... management tool installed!")

    # Run qaz to install basics
    subprocess.run(
        ("mkdir", "-p", os.path.expanduser("~/.config")),
        check=True,
    )
    subprocess.run(
        (qaz_entrypoint, "setup", qaz_dir),
        check=True,
    )

    # Install zsh and set as default shell
    subprocess.run(
        (qaz_entrypoint, "install", "zsh"),
        check=True,
    )

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
